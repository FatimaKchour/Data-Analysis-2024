import pandas as pd

# Load the data from the Excel file
file_path = '/mnt/data/file-J8q8RqiykzXZnU5oXlJB0HlW'  # Replace with your file path
df = pd.read_excel(file_path)

# Convert TIMESTAMP from seconds to milliseconds
df['TIMESTAMP'] = df['TIMESTAMP'] * 1000

# Define fixation duration thresholds in milliseconds
min_fixation_threshold = 100  # 100 milliseconds
max_fixation_threshold = 3000  # 3000 milliseconds (3 seconds)

# Ensure columns exist in the DataFrame
df['GLANCE_DURATION'] = None
df['GLANCE_DURATION_milliseconds'] = None
df['TIMESTAMP_INITIAL'] = None
df['TIMESTAMP_FINAL'] = None

# Initialize variables to track the start of the fixations
last_id = None
start_timestamp = None
start_idx = None

# Iterate over the dataframe to fill OBJECT_FIXATED and calculate GLANCE_DURATION
for i in range(len(df)):
    current_id = df.at[i, 'ID_GAZE_CLASS']
    current_timestamp = df.at[i, 'TIMESTAMP']
    
    if pd.notna(current_id):
        if current_id == last_id:
            # Continue the fixation
            end_timestamp = current_timestamp
        else:
            # New fixation starts
            if last_id is not None and start_timestamp is not None:
                # Calculate the duration for the previous fixation
                duration = end_timestamp - start_timestamp
                if min_fixation_threshold <= duration <= max_fixation_threshold:
                    df.loc[start_idx, 'GLANCE_DURATION'] = duration / 1000  # Convert to seconds
                    df.loc[start_idx, 'GLANCE_DURATION_milliseconds'] = duration
                    df.loc[start_idx, 'TIMESTAMP_INITIAL'] = start_timestamp
                    df.loc[start_idx, 'TIMESTAMP_FINAL'] = end_timestamp
            
            # Start new fixation
            last_id = current_id
            start_timestamp = current_timestamp
            start_idx = i
            end_timestamp = current_timestamp
        
        # Fill OBJECT_FIXATED
        df.at[i, 'OBJECT_FIXATED'] = current_id
    else:
        # End the previous fixation
        if last_id is not None and start_timestamp is not None:
            duration = end_timestamp - start_timestamp
            if min_fixation_threshold <= duration <= max_fixation_threshold:
                df.loc[start_idx, 'GLANCE_DURATION'] = duration / 1000  # Convert to seconds
                df.loc[start_idx, 'GLANCE_DURATION_milliseconds'] = duration
                df.loc[start_idx, 'TIMESTAMP_INITIAL'] = start_timestamp
                df.loc[start_idx, 'TIMESTAMP_FINAL'] = end_timestamp
        
        # Reset variables
        last_id = None
        start_timestamp = None
        start_idx = None

# Handle the last fixation in the loop
if last_id is not None and start_timestamp is not None:
    duration = end_timestamp - start_timestamp
    if min_fixation_threshold <= duration <= max_fixation_threshold:
        df.loc[start_idx, 'GLANCE_DURATION'] = duration / 1000  # Convert to seconds
        df.loc[start_idx, 'GLANCE_DURATION_milliseconds'] = duration
        df.loc[start_idx, 'TIMESTAMP_INITIAL'] = start_timestamp
        df.loc[start_idx, 'TIMESTAMP_FINAL'] = end_timestamp

# Save the updated DataFrame back to the Excel file
output_file_path = 'output_file.xlsx'  # Replace with your output file path
df.to_excel(output_file_path, index=False)

print("Processing complete. The results have been saved to the output file.")
