import pandas as pd

# Load the Excel file
file_path = 'path_to_your_file.xlsx'
data = pd.read_excel(file_path)

# Define the priority rule for handling ties in mode calculation
priority_rule = [1, 4, 7, 3, 2, 5, 6]

# Function to calculate the mode with priority
def calculate_mode_with_priority(series):
    counts = series.value_counts()
    max_count = counts.max()
    candidates = counts[counts == max_count].index.tolist()
    for value in priority_rule:
        if value in candidates:
            return value
    return None

# Create a new column for MODE_GAZE_QUADRANT
mode_gaze_quadrant = []

# Iterate over each row to calculate the mode of GAZE_QUADRANT between TIMESTAMP_INITIAL and TIMESTAMP_FINAL
for index, row in data.iterrows():
    if pd.notnull(row['TIMESTAMP_INITIAL']) and pd.notnull(row['TIMESTAMP_FINAL']):
        initial_timestamp = row['TIMESTAMP_INITIAL']
        final_timestamp = row['TIMESTAMP_FINAL']
        gaze_quadrants = data[(data['TIMESTAMP'] >= initial_timestamp) & (data['TIMESTAMP'] <= final_timestamp)]['GAZE_QUADRANT']
        gaze_quadrants = gaze_quadrants.dropna()  # Step 1: Skip blank values
        if not gaze_quadrants.empty:
            mode_value = calculate_mode_with_priority(gaze_quadrants)
        else:
            mode_value = None
    else:
        mode_value = None
    mode_gaze_quadrant.append(mode_value)

# Add the new column to the dataframe
data['MODE_GAZE_QUADRANT'] = mode_gaze_quadrant

# Save the updated dataframe to a new Excel file
data.to_excel('updated_file.xlsx', index=False)

print("The updated DataFrame has been saved to 'updated_file.xlsx'.")
